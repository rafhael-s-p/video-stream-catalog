plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

bootJar {
    archiveName 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

group 'com.studies.catalog.infrastructure'

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }

    implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
    implementation('org.springframework.kafka:spring-kafka')
    implementation('org.springframework.boot:spring-boot-starter-graphql')
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
    implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.7.0')
    implementation('org.springdoc:springdoc-openapi-ui:1.7.0')


    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    testImplementation('org.springframework.kafka:spring-kafka-test')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.boot:spring-boot-testcontainers')
    testImplementation('org.springframework.graphql:spring-graphql-test')
    testImplementation('org.springframework.security:spring-security-test')

    testImplementation('org.testcontainers:kafka:1.18.3')
    testImplementation('org.testcontainers:testcontainers:1.18.3')
    testImplementation('org.testcontainers:elasticsearch:1.18.3')
    testImplementation('org.testcontainers:junit-jupiter:1.18.3')


}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}